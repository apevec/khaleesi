---
- name: ensure openstack-heat-templates installed
  yum: name={{ item }} state=present
  with_items:
    - openstack-heat-templates

- name: copy build script to undercloud
  template:
    src=modded-build.sh
    dest={{ instack_user_home.stdout }}/modded-build.sh
    mode=0755

- name: build vanilla image
  sudo: yes
  shell: >
    chdir={{ instack_user_home.stdout }}
    source {{ instack_user_home.stdout }}/stackrc;
    export RHOS=1;
    export NODE_DIST="rhel7";
    export DIB_YUM_REPO_CONF="/etc/yum.repos.d/rhos-release-6-rhel-7.0.repo";
    export REG_HALT_UNREGISTER=1;
    export DIB_CLOUD_IMAGES="{{ product.images['rhel'][ansible_distribution_version].remote_file_server }}";
    export BASE_IMAGE_FILE="{{ product.images['rhel'][ansible_distribution_version].guest_image_name }}";
    export REG_METHOD=disable;
    export DIB_INSTALLTYPE_heat_config=package;
    {{ instack_user_home.stdout }}/modded-build.sh
  register: build_vanilla_output

- name: tripleo image-load vanilla image
  shell: >
    chdir={{ instack_user_home.stdout }}
    source {{ instack_user_home.stdout }}/stackrc;
    export RHOS=1;
    export NODE_DIST="rhel7";
    export DIB_YUM_REPO_CONF="/etc/yum.repos.d/rhos-release-6-rhel-7.0.repo";
    export REG_HALT_UNREGISTER=1;
    export DIB_CLOUD_IMAGES="{{ product.images['rhel'][ansible_distribution_version].remote_file_server }}";
    export BASE_IMAGE_FILE="{{ product.images['rhel'][ansible_distribution_version].guest_image_name }}";
    export REG_METHOD=disable;
    export DIB_INSTALLTYPE_heat_config=package;
    tripleo load-image vanilla.qcow2
  register: build_vanilla_output

- name: remove cache created by dib run
  sudo: yes
  file: path=/root/.cache/image-create state=absent

- name: copy custom heat template to undercloud
  template:
    src=WordPress_software-config_2-instances.yaml
    dest={{ instack_user_home.stdout }}/WordPress_software-config_2-instances.yaml
    mode=0644
- name: copy custom heat template to undercloud
  template:
    src=db_install.sh
    dest={{ instack_user_home.stdout }}/db_install.sh
    mode=0644
- name: copy custom heat template to undercloud
  template:
    src=wp_install.sh
    dest={{ instack_user_home.stdout }}/wp_install.sh
    mode=0644

- name: format json for register-nodes to consume
  shell: jq '.nodes' {{ instack_user_home.stdout }}/instackenv.json > {{ instack_user_home.stdout }}/instack_nodes_definition

- name: register nodes with ironic
  shell: >
    chdir={{ instack_user_home.stdout }}
    source {{ instack_user_home.stdout }}/stackrc;
    register-nodes --service-host undercloud --nodes {{ instack_user_home.stdout }}/instack_nodes_definition
  register: register_nodes_output

- name: wait for nodes to register
  shell: >
    chdir={{ instack_user_home.stdout }}
    source {{ instack_user_home.stdout }}/stackrc;
    tripleo wait_for 180 1 wait_for_hypervisor_stats 4
  register: tripleo_wait_for_output

- name: heat stack-create with custom template
  shell: >
    chdir={{ instack_user_home.stdout }}
    source {{ instack_user_home.stdout }}/stackrc;
    heat stack-create -f {{ instack_user_home.stdout }}/WordPress_software-config_2-instances.yaml {{ heat_stack_name }}
  register: heat_stack_create_output

- name: wait for stack creation
  shell: >
    chdir={{ instack_user_home.stdout }}
    source {{ instack_user_home.stdout }}/stackrc;
    heat stack-show {{ heat_stack_name }} | grep stack_status | grep -v stack_status_reason | awk '{print $4}'
  register: stack_creation_status
  until: stack_creation_status.stdout.find("CREATE_COMPLETE") != -1
  retries: 20
  delay: 30

- name: curl wordpress admin/setup page
  shell: >
    chdir={{ instack_user_home.stdout }}
    source {{ instack_user_home.stdout }}/stackrc;
    curl -f `heat output-show {{ heat_stack_name }} WebsiteURL | sed s/\"//g`
  register: wordpress_0_output
  retries: 10
  delay: 15
  until: wordpress_0_output.rc == 0

- name: output wordpress admin/setup page for node 0
  debug: var=wordpress_0_output.stdout
